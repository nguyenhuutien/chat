/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class UpdatePass extends javax.swing.JFrame {

    /**
     * Creates new form UpdatePass
     */
    int port;
    String ip;
    private BufferedReader reader;
    private PrintWriter writer;
    private Socket socket;
    String username;
    int allow = 0;

    public UpdatePass(String name, String IP, int PORT) {
        ip = IP;
        port = PORT;
        username = name;
        initComponents();
        String url = System.getProperty("user.dir", null);
        String urlIcon;
        urlIcon = url + "\\icon\\27.png";
        btChange.setIcon(new javax.swing.ImageIcon(urlIcon));
        btChange.setBackground(new Color(255, 204, 255));
        getContentPane().setBackground(new Color(153, 235, 255));
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btChange = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        pfOld = new javax.swing.JPasswordField();
        pfNew = new javax.swing.JPasswordField();
        pfAgain = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mật khẩu cũ :");

        jLabel2.setText("Mật khẩu mới :");

        btChange.setText("Thay đổi");
        btChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChangeActionPerformed(evt);
            }
        });

        jLabel3.setText("Nhập lại mật khẩu :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pfNew, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btChange)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pfAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(51, 51, 51)
                                    .addComponent(pfOld, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pfAgain, pfNew, pfOld});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pfOld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pfNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfAgain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addComponent(btChange)
                .addGap(61, 61, 61))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {pfAgain, pfNew, pfOld});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class ReadData implements Runnable {

        @Override
        public void run() {
            try {
                String[] data;
                String chat;
                while ((chat = reader.readLine()) != null) {
                    if (chat != null) {
                        data = chat.split("[|,:]");
                        switch (data[0]) {
                            case "EXIT":
                                allow = 0;
                                break;
                            case "SUCCESSFUL":
                                allow = 1;
                                break;
                        }
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void Listen() {
        Thread readData = new Thread(new ReadData());
        readData.start();
    }
    private void btChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChangeActionPerformed
        String pwOld = pfOld.getText();
        String pwNew = pfNew.getText();
        String pwAgain = pfAgain.getText();
        if (pwOld.equals("") == false && pwNew.equals("") == false && pwAgain.equals("") == false && pwAgain.equals(pwNew)) {
            try {
                socket = new Socket(ip, port);
                InputStreamReader isr = new InputStreamReader(socket.getInputStream());
                reader = new BufferedReader(isr);
                writer = new PrintWriter(socket.getOutputStream());
                writer.println("UPDATEPASS|null|" + username + "|" + pwNew + "\n");
                writer.flush();
                Listen();
                Thread.sleep(100);
                switch (allow) {
                    case 1:
                        JOptionPane.showMessageDialog(null, "Cập nhật mật khẩu thành công!");
                        pfOld.setText("");
                        pfNew.setText("");
                        pfAgain.setText("");
                        pfOld.requestFocus();
                        writer.close();
                        reader.close();
                        socket.close();
                        break;
                    case 0:
                        JOptionPane.showMessageDialog(null, "Cập nhật mật khẩu không thành công!");
                        pfOld.setText("");
                        pfNew.setText("");
                        pfAgain.setText("");
                        pfOld.requestFocus();
                        break;
                }

            } catch (IOException ex) {
                Logger.getLogger(UpdatePass.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(UpdatePass.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btChangeActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btChange;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField pfAgain;
    private javax.swing.JPasswordField pfNew;
    private javax.swing.JPasswordField pfOld;
    // End of variables declaration//GEN-END:variables
}
