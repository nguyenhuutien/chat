/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class SignIn extends javax.swing.JFrame {

    /**
     * Creates new form SignIn
     */
    int port;
    String ip;
    private BufferedReader reader;
    private PrintWriter writer;
    private Socket socket;
    int allow = 0;

    public SignIn(String IP, int PORT) {
        ip = IP;
        port = PORT;
        initComponents();
        String url = System.getProperty("user.dir", null);
        String urlIcon;
        urlIcon = url + "\\icon\\47.png";
        btSign.setIcon(new javax.swing.ImageIcon(urlIcon));
        btSign.setBackground(new Color(255, 204, 255));
        getContentPane().setBackground(new Color(153, 235, 255));
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfUser = new javax.swing.JTextField();
        pfPw = new javax.swing.JPasswordField();
        btSign = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tên đăng nhập :");

        jLabel2.setText("Mật khẩu :");

        btSign.setText("Đăng kí");
        btSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btSign)
                            .addComponent(pfPw, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pfPw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btSign)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class ReadData implements Runnable {

        @Override
        public void run() {
            try {
                String[] data;
                String chat;
                while ((chat = reader.readLine()) != null) {
                    if (chat != null) {
                        if (chat.equals("EXIT")) {
                            allow = 0;
                        } else if (chat.equals("SUCCESSFUL")) {
                            allow = 1;
                        }
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void Listen() {
        Thread readData = new Thread(new ReadData());
        readData.start();
    }
    private void btSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSignActionPerformed
        String name = tfUser.getText();
        String pass = pfPw.getText();
        if (name.equals("") == false && pass.equals("") == false) {
            try {
                socket = new Socket(ip, port);
                InputStreamReader isr = new InputStreamReader(socket.getInputStream());
                reader = new BufferedReader(isr);
                writer = new PrintWriter(socket.getOutputStream());
                writer.println("SIGNIN|null|" + name + "|" + pass + "\n");
                writer.flush();
                Listen();
                Thread.sleep(100);
                switch (allow) {
                    case 1:
                        JOptionPane.showMessageDialog(null, "Đăng kí thành công!");
                        tfUser.setText("");
                        pfPw.setText("");
                        tfUser.requestFocus();
                        writer.close();
                        reader.close();
                        socket.close();
                        break;
                    case 0:
                        JOptionPane.showMessageDialog(null, "Tên này đã có người sử dụng!");
                        tfUser.setText("");
                        pfPw.setText("");
                        tfUser.requestFocus();
                        break;
                }

            } catch (IOException ex) {
                System.out.println("Socket closed");
            } catch (InterruptedException ex) {
                Logger.getLogger(SignIn.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Dữ liệu không hợp lệ!");
            tfUser.setText("");
            pfPw.setText("");
            tfUser.requestFocus();
        }
    }//GEN-LAST:event_btSignActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSign;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField pfPw;
    private javax.swing.JTextField tfUser;
    // End of variables declaration//GEN-END:variables
}
